// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/ffauzann/loan-service/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// RedisRepository is an autogenerated mock type for the RedisRepository type
type RedisRepository struct {
	mock.Mock
}

// RegisterUserDevice provides a mock function with given fields: ctx, deviceId, token
func (_m *RedisRepository) RegisterUserDevice(ctx context.Context, deviceId string, token *model.Token) error {
	ret := _m.Called(ctx, deviceId, token)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *model.Token) error); ok {
		r0 = rf(ctx, deviceId, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRedisRepository creates a new instance of RedisRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRedisRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *RedisRepository {
	mock := &RedisRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
